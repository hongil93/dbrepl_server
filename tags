<<<<<<< HEAD
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUF_SIZE	include/recv.h	1;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFG	include/main.h	/^}CFG;$/;"	t	typeref:struct:_config
CFLAGS	Makefile	/^CFLAGS = -c $(IFLAGS)$/;"	m
CLIENT_LIST	include/recv.h	/^} CLIENT_LIST;$/;"	t	typeref:struct:_client_list
DB	include/main.h	/^	DB = 0,$/;"	e	enum:jdr_type
DB_INFO	include/db.h	/^} DB_INFO;$/;"	t	typeref:struct:_db_info
DB_LIB_DIR	Makefile	/^DB_LIB_DIR = \/usr\/lib64\/$/;"	m
DB_LIST	include/db.h	/^} DB_LIST;$/;"	t	typeref:struct:_db_list
EVT_ERROR	include/recv.h	8;"	d
EVT_STATUS	include/recv.h	9;"	d
EVT_WARNING	include/recv.h	7;"	d
Header	include/recv.h	/^} Header;$/;"	t	typeref:struct:_header
IFLAGS	Makefile	/^IFLAGS = -I$(INC_DIR1) -I$(INC_DIR2) -I$(INC_DIR3)$/;"	m
INC_DIR1	Makefile	/^INC_DIR1 = \/home\/kim\/libeluon\/include$/;"	m
INC_DIR2	Makefile	/^INC_DIR2 = \/home\/kim\/project\/dbrepl_server\/include$/;"	m
INC_DIR3	Makefile	/^INC_DIR3 = \/usr\/include\/mysql$/;"	m
JDR_SECTION	init.c	2;"	d	file:
LDFLAGS	Makefile	/^LDFLAGS = -L$(DB_LIB_DIR) -lmariadb -L$(LIB_DIR) -leluonutil$/;"	m
LIB_DIR	Makefile	/^LIB_DIR = \/home\/kim\/libeluon\/lib$/;"	m
MAX_CLIENTS	include/recv.h	3;"	d
MAX_DBNAME	include/db.h	5;"	d
MAX_EPOLL_EVENT	include/recv.h	2;"	d
MAX_FILE_NAME	include/main.h	21;"	d
MAX_HOST	include/db.h	2;"	d
MAX_PASSWORD	include/db.h	4;"	d
MAX_USERNAME	include/db.h	3;"	d
OBJS	Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
PCB	include/main.h	/^}PCB;$/;"	t	typeref:struct:_process_control_block
Packet	include/recv.h	/^} Packet;$/;"	t	typeref:struct:_packet
REQUEST	include/main.h	/^	REQUEST,$/;"	e	enum:jdr_type
RESPONSE	include/main.h	/^	RESPONSE$/;"	e	enum:jdr_type
SQL	include/main.h	/^	SQL,$/;"	e	enum:jdr_type
SQL_COMPARE	include/recv.h	6;"	d
SQL_RESTORE	include/recv.h	11;"	d
SQL_RESTORE2	include/recv.h	12;"	d
SQL_SELECT	include/recv.h	5;"	d
SRCS	Makefile	/^SRCS = main.c db.c init.c recv.c send.c util.c$/;"	m
TARGET	Makefile	/^TARGET = repl$/;"	m
_client_list	include/recv.h	/^typedef struct _client_list{$/;"	s
_config	include/main.h	/^typedef struct _config{$/;"	s
_db_info	include/db.h	/^typedef struct _db_info{$/;"	s
_db_list	include/db.h	/^typedef struct _db_list{$/;"	s
_header	include/recv.h	/^typedef struct _header{$/;"	s
_packet	include/recv.h	/^typedef struct _packet{$/;"	s
_process_control_block	include/main.h	/^typedef struct _process_control_block{$/;"	s
add_client	recv.c	/^void add_client(int clfd) {$/;"	f
broadcast_message	recv.c	/^void broadcast_message(const char* message, int type) {$/;"	f
buf	include/recv.h	/^    char buf[BUF_SIZE];$/;"	m	struct:_packet
cfg	include/main.h	/^	CFG cfg[1];$/;"	m	struct:_process_control_block
check_db	db.c	/^int check_db()$/;"	f
check_db_status_t	include/main.h	/^pthread_t check_db_status_t;$/;"	v
check_file	db.c	/^void* check_file(void* args){$/;"	f
check_file_t	include/main.h	/^pthread_t check_file_t;$/;"	v
client_count	include/recv.h	/^    int client_count;$/;"	m	struct:_client_list
client_list	include/recv.h	/^CLIENT_LIST client_list;$/;"	v
client_sockets	include/recv.h	/^    int client_sockets[MAX_CLIENTS];$/;"	m	struct:_client_list
compare_table	db.c	/^char* compare_table(int db_index)$/;"	f
config_file_name	include/main.h	/^	char config_file_name[MAX_FILE_NAME];$/;"	m	struct:_config
conn	include/db.h	/^	MYSQL* conn;$/;"	m	struct:_db_info
connect_db	db.c	/^MYSQL* connect_db(MYSQL* conn, int db_idx){$/;"	f
connect_main_db	db.c	/^void connect_main_db(int activated_db, MYSQL* conn)$/;"	f
db01	include/db.h	/^	DB_INFO* db01;$/;"	m	struct:_db_list
db01	include/main.h	/^	DB_INFO db01;$/;"	m	struct:_process_control_block
db02	include/db.h	/^	DB_INFO* db02;$/;"	m	struct:_db_list
db02	include/main.h	/^	DB_INFO db02;$/;"	m	struct:_process_control_block
dbname	include/db.h	/^	char dbname[MAX_DBNAME];$/;"	m	struct:_db_info
debug_level	include/main.h	/^	int debug_level;$/;"	m	struct:_config
ec_log	db.c	7;"	d	file:
ec_log	recv.c	7;"	d	file:
ec_log	send.c	4;"	d	file:
get_db_data	db.c	/^int get_db_data(int db_idx){$/;"	f
get_select_all	db.c	/^char* get_select_all()$/;"	f
gpcb	include/main.h	/^PCB gpcb[1];$/;"	v
header	include/recv.h	/^    Header header;$/;"	m	struct:_packet
host	include/db.h	/^	char host[MAX_HOST];$/;"	m	struct:_db_info
idx	include/db.h	/^	int idx;$/;"	m	struct:_db_info
jdr_type	include/main.h	/^enum jdr_type{$/;"	g
length	include/recv.h	/^    int length;$/;"	m	struct:_header
log_file_name	include/main.h	/^	char log_file_name[MAX_FILE_NAME];$/;"	m	struct:_config
main	main.c	/^int main(int argc, char* argv[])$/;"	f
make_connection	recv.c	/^int make_connection()$/;"	f
make_thread	main.c	/^void make_thread(pthread_t thread)$/;"	f
max_file_size	include/main.h	/^	int max_file_size;$/;"	m	struct:_config
max_log_count	include/main.h	/^	int max_log_count;$/;"	m	struct:_config
max_queue_count	include/main.h	/^	int max_queue_count;$/;"	m	struct:_config
password	include/db.h	/^	char password[MAX_PASSWORD];$/;"	m	struct:_db_info
port	include/db.h	/^	int port;$/;"	m	struct:_db_info
print_db_ver	db.c	/^void print_db_ver()$/;"	f
read_db_cfg	init.c	/^int read_db_cfg()$/;"	f
read_log_cfg	init.c	/^int read_log_cfg()$/;"	f
recv_message	recv.c	/^void recv_message(int clfd) {$/;"	f
recv_packet	recv.c	/^int recv_packet(int sock, Packet *msg) {$/;"	f
remove_client	recv.c	/^void remove_client(int clfd) {$/;"	f
send_message	recv.c	/^void send_message(int clfd, int type, const char* message) {$/;"	f
send_server_status	send.c	/^void* send_server_status(void* args){$/;"	f
set_config_name	init.c	/^void set_config_name(char* config_file_name){$/;"	f
set_main_db	db.c	/^int set_main_db(int db01_st, int db02_st, MYSQL* conn)$/;"	f
set_non_blocking	recv.c	/^int set_non_blocking(int sfd) {$/;"	f
status	include/db.h	/^	int status;$/;"	m	struct:_db_info
time_now	util.c	/^char* time_now(){$/;"	f
type	include/recv.h	/^    int type;$/;"	m	struct:_header
type_categorizer	recv.c	/^void type_categorizer(int fd, Packet packet){$/;"	f
username	include/db.h	/^	char username[MAX_USERNAME];$/;"	m	struct:_db_info
=======
>>>>>>> ebca0420bba7e2fc272d5ccee0931870f83fb2ed
